name: Haskell CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux-build:
    runs-on: ubuntu-latest
    # Use older version of alpine that predates this change
    # https://git.musl-libc.org/cgit/musl/commit/?id=246f1c811448f37a44b41cd8df8d0ef9736d95f4
    # Otherwise we error out when linking statically complaining about sendfile64 in snap-server
    container: alpine:3.16
    # A lot of this comes from https://github.com/hasufell/stack2cabal/blob/160ae10b9e78c398803ed7ba4ab9d49c553df42d/.github/workflows/release.yaml#L32
    steps:
    - name: Install system dependencies
      run: |
        apk add --no-cache curl gcc g++ gmp-dev ncurses-dev libffi-dev make xz gzip tar perl git bash sudo binutils-gold
        apk add --no-cache zlib zlib-dev zlib-static gmp gmp-dev ncurses-static python3

    - name: Install ghcup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://downloads.haskell.org/~ghcup/x86_64-linux-ghcup > /usr/bin/ghcup
        chmod +x /usr/bin/ghcup
        echo "$HOME/.ghcup/bin" $GITHUB_PATH
      shell: bash

    - name: Install GHC and cabal
      run: |
        ghcup install ghc   --force -i /usr/local     9.4.8
        ghcup install cabal --force -i /usr/local/bin 3.10
      shell: bash

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache
      uses: actions/cache@v3
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Build Project
      shell: bash
      run: |
        cp cabal.project.freeze.ghc94 cabal.project.freeze
        cp cabal.project.prod cabal.project
        cabal update
        cabal build --enable-executable-static # We use build instead of install because of a weird changeWorkingDirectory error when we do that, something to do with Elm's use of TH
        OUTPUT_BIN=$(cabal list-bin zokka)
        mkdir -p output
        cp $OUTPUT_BIN output/zokka

    - name: Run cabal tests
      run: cabal test all

    - name: Run elm-test-rs tests
      run: python3 run-test-rs-tests.py

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: zokka-compiler-dev-version
        path: ./output/zokka

  build-package-server:
    runs-on: ubuntu-latest
    # Use older version of alpine that predates this change
    # https://git.musl-libc.org/cgit/musl/commit/?id=246f1c811448f37a44b41cd8df8d0ef9736d95f4
    # Otherwise we error out when linking statically complaining about sendfile64 in snap-server
    container: alpine:3.16
    # A lot of this comes from https://github.com/hasufell/stack2cabal/blob/160ae10b9e78c398803ed7ba4ab9d49c553df42d/.github/workflows/release.yaml#L32
    steps:
    - name: Install system dependencies
      run: |
        apk add --no-cache curl gcc g++ gmp-dev ncurses-dev libffi-dev make xz gzip tar perl git bash sudo binutils-gold
        apk add --no-cache zlib zlib-dev zlib-static gmp gmp-dev ncurses-static

    - name: Install ghcup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://downloads.haskell.org/~ghcup/x86_64-linux-ghcup > /usr/bin/ghcup
        chmod +x /usr/bin/ghcup
        echo "$HOME/.ghcup/bin" $GITHUB_PATH
      shell: bash

    - name: Install GHC and cabal
      run: |
        ghcup install ghc   --force -i /usr/local     9.4.8
        ghcup install cabal --force -i /usr/local/bin 3.10
      shell: bash

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Project
      shell: bash
      run: |
        rm cabal.project
        cd custom-package-server
        cabal update
        mkdir -p output
        cabal install --enable-executable-static --installdir=output
        python3 example_test.py
        cp output/myPackage output/zokka-custom-package-server

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: zokka-custom-package-server-dev-version
        path: ./output/zokka-custom-package-server

